
Create a gitHub account

Create a repository that will contain all the website files.
Repository must be in the format:

your-user-name.github.io

So for mine, it will be sam-carruthers99.github.io


We need to initialize repository, and upload (push) the site contents to the repository:
1- In terminal, go to site's directory
2- Initialize repository with the following command:
		git init


We need to tell Git which repo will store those contents. We will have a remote, which is the URL of the repo we are using. Then, we will have an origin (basically an alias for the remote, an abbreviation)

Add remote with the following command:
	git remote add origin https://github.com/your-user-name/your-user-name.github.io

	So for me, 
	git remote add origin https://github.com/sam-carruthers99/sam-carruthers99.github.io.git

This is the URL that has the repository with the website contents. 


If you need to start over, can do:
	git remote rm origin

Confirm successful with:
	git remote -v

Add all the site's contents with:
	git add .

Commit changes with:
	git commit -m "Save my work"


Now push the site contents to the repo with:
	git push -u origin master

(will have to type in user and password when pushing, and the password will be invisible but is still being typed, just security)

The github pages server now hosts the website. 



Using gmail AWS.
Go to Route 53, and "Register Domain Name".
Has a search bar to see what is available. 

Shows the cost of them, which seems to be $12 / year for ones that are .com and available. 

Once you get it, you must connect it to GitHub.

1- Go to GitHub and find the repository you created earlier. The one that is your-user-name.github.io
2- Click "New File"
3- Name the new file "CNAME" (without quotes, and no extension)(this informs GitHub that you're assigning a new domain name to the Github Pages site)
4- On line 1 of the file, type in the custom domain name that you purchased:
	so yourcustomdomain.com, and for you something like
	dailyquarantinepuzzles.com.
5- Commit the file (if you scroll down a bit)
6- Then, click "Settings", and if you scroll down, you should see a message similar to "your site is published at https://yourcustomdomain.com"

This is it for the github part, and it shouldn't be working quite yet.



Must create DNS records, which map domain names to servers, and they are globally accessible. Will be created under a "Hosted Zone" in Route 53. A Hosted Zone is a bunch of DNS records for a single domain. 

Go back to Route 53 AWS, and on the left side of the page should be a tab that says "Hosted Zones". Go there, and you should see a zone for your new domain name. Click on the zone for that domain name. 

Domain names are associated with the correct DNS records by setting the "name servers". The name servers provide the computer with important info that is associated with the domain name (the info. is in the form of DNS records). 

1- There are four NS (Name servers) already in the Hosted Zone. Copy these somewhere else, just so you have them.
2- On the left side of the page, click on "Registered domains". Then click on your domain name. 
3- On the right of the page, you will see the section "Name Servers", and that Route 53 has already automatically added these.

Creating an "A" record, or Address record, will help computers locate the site. It directs a domain name to an IP address. It will associate our custom domain name to Github's servers. 

1- In the Hosted Zone, click on the button at the top labeled “Create Record Set.” A form will appear. Leave the “Name” field blank, and set the “Type” field to A - IPv4 address.
2- Leave the “TTL (Seconds)” value at the default of 300.
3- In the “Value” box, enter these IP addresses (should be separate lines):
	192.30.252.153
	192.30.252.154
These are GitHub IP addresses. When the custom domain name is requested, the DNS should then redirect the request to GitHub. 
4- Click the “Save Record Set” button at the bottom of the form


We can also set up a subdomain with www.
So www.yourcustomdomain.com will be a subdomain of yourcustomdomain.com. Setting this with a CNAME record, stands for Canonical Name. 

1- Click on the "Create Record Set" button again
2- In the form, set "Name:" to "www" (without quotes), and in the "Type:", set it to "CNAME - Canonical name" from the dropdown
3- In the "Value"box, enter the domain name assigned to you earlier:
	your-user-name.github.io
So in our case, sam-carruthers99.github.io
4- Click "Save Record Set"


Test both the custom domain and the subdomain in the browser to see if the site works. It could take a few minutes for the DNS record. 


Overall Review: 

In Route 53, the Hosted Zone has:
1- The NS (Name Server) record for the domain name. DNS looks at these servers when a domain name is typed into the browser to direct the request. 
2- A (Alias) record, used to direct requests of the domain name to GitHub's servers using their IP addresses.
3- The CNAME (Canonical name) record, which specifies what custom domain will point to the true (canonical domain)


Steps We Went Through:
1- Purchase a custom domain name in Route 53
2- Four name servers were assigned automatically to the custom domain name
3- The Hosted Zone, which had multiple DNS records for the custom domain name, was set up in Route 53
4- In the Hosted Zone, the NS record was created automatically by Route 53. We created the "A" record and "CNAME" record.

